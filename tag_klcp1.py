#!/usr/bin/env python3

# tag_klcp1.py
#
# Adds the "klcp1" metadata tag for entries which are part of the vocabulary for
# the Klingon Language Certification Program level 1 test.

import fileinput
import re

definition_to_pos = {
  "ability": "n",
  "accept": "v",
  "accompany": "v",
  "accomplish": "v",
  "deed, accomplishment": "n",
  "ache, hurt, be sore": "v",
  "achieve": "v",
  "achievement": "n",
  "acquire, obtain, get": "v",
  "act, take action": "v",
  "add": "v",
  "additional one, other one": "n",
  "admit": "v",
  "advice": "n",
  "advise": "v",
  "afternoon": "n",
  "alien, outsider, foreigner": "n",
  "allow, permit": "v",
  "alter, change": "v",
  "analyze": "v",
  "meat, animal": "n",
  "answer, reply": "v",
  "approach, go away from, proceed, come, follow (a course)": "v",
  "area above, area overhead": "n",
  "area below, area under": "n",
  "area beside, area next to": "n",
  "area between": "n",
  "arm (body part)": "n",
  "arrive": "v",
  "request, ask, plead": "v",
  "attack": "v",
  "attempt, try": "v",
  "bar, saloon, cocktail lounge": "n",
  "battle": "n",
  "be a problem, be a hassle": "v",
  "be absent": "v",
  "be accomplished, finished": "v",
  "be advanced, highly developed": "v",
  "be all gone": "v",
  "be alone": "v",
  "be angry, mad": "v",
  "be bad": "v",
  "be beautiful, handsome": "v",
  "be big": "v",
  "be black": "v",
  "be boring": "v",
  "be brave": "v",
  "be calm": "v",
  "be careful": "v",
  "be clean": "v",
  "be clever, smart, intelligent": "v",
  "be closed, shut": "v",
  "be clumsy": "v",
  "be cold": "v",
  "be confused, mixed up": "v",
  "be counterfeit, false, fake": "v",
  "be crazy": "v",
  "be dangerous": "v",
  "be depressed": "v",
  "be different": "v",
  "be difficult, be complex": "v",
  "be dirty": "v",
  "be dishonest": "v",
  "be drunk, intoxicated": "v",
  "be dry, be dried out": "v",
  "be dull, uninteresting": "v",
  "be easy": "v",
  "be enough, sufficient": "v",
  "be essential, necessary": "v",
  "be excited": "v",
  "be expert, skilled": "v",
  "be famous, well-known": "v",
  "be fat": "v",
  "be fat (not lean)": "v",
  "be few, be several, be a handful": "v",
  "be final, last": "v",
  "be fortunate, lucky": "v",
  "be free, independent": "v",
  "be frozen": "v",
  "be funny": "v",
  "be good": "v",
  "be green, blue, yellow": "v",
  "be grouchy, mean": "v",
  "be happy": "v",
  "be hard (like a rock)": "v",
  "be healthy": "v",
  "be heavy": "v",
  "be honored, be honorable": "v",
  "be hot": "v",
  "be hungry": "v",
  "be identical": "v",
  "be impressive": "v",
  "be inferior": "v",
  "be interesting": "v",
  "be lazy": "v",
  "be light, bright": "v",
  "be many, be numerous": "v",
  "be messy, sloppy": "v",
  "be nervous, uneasy": "v",
  "be new": "v",
  "be old (not new)": "v",
  "be old (not young)": "v",
  "be open, opened": "v",
  "be orange, red": "v",
  "be pleased": "v",
  "be present (not absent)": "v",
  "be proud": "v",
  "be qualified": "v",
  "be quiet": "v",
  "be remote, far": "v",
  "be responsible": "v",
  "be right, correct": "v",
  "be rough": "v",
  "be sad": "v",
  "be satisfied": "v",
  "be serious": "v",
  "be sharp": "v",
  "be sick, ill": "v",
  "be simple": "v",
  "be small": "v",
  "be smooth": "v",
  "be sour, be bitter, be tart": "v",
  "be special, exceptional": "v",
  "be strong": "v",
  "be stupid": "v",
  "be temporary": "v",
  "be the same": "v",
  "be thirsty": "v",
  "be tired": "v",
  "be together": "v",
  "be tough": "v",
  "be trivial, be trifling, be unimportant, be insignificant": "v",
  "be true": "v",
  "be useful": "v",
  "be varied, various": "v",
  "be weak": "v",
  "be weird": "v",
  "be wet": "v",
  "be white": "v",
  "be wrong": "v",
  "beam (aboard)": "v",
  "become": "v",
  "believe": "v",
  "bend, be bent": "v",
  "betray": "v",
  "birthday": "n",
  "bite": "v",
  "blame": "v",
  "blood": "n",
  "board, go aboard": "v",
  "body": "n",
  "book": "n",
  "boot": "n",
  "borrow": "v",
  "boss": "n",
  "boy": "n",
  "break": "v",
  "breakfast": "n",
  "breathe": "v",
  "bring": "v",
  "brother": "n",
  "building, structure": "n",
  "burn": "v",
  "buy, purchase": "v",
  "calculate": "v",
  "calendar": "n",
  "captain": "n",
  "care (about), be concerned (about)": "v",
  "carry, convey": "v",
  "cause trouble": "v",
  "chair": "n",
  "charming (used only ironically)": "excl",
  "chase, follow": "v",
  "cheat": "v",
  "jowl, cheek": "n",
  "chew": "v",
  "child, offspring": "n",
  "chocolate": "n",
  "choose, select": "v",
  "chronometer": "n",
  "city": "n",
  "climb": "v",
  "close in, get closer, come nearer": "v",
  "cloud": "n",
  "communicate": "v",
  "compete": "v",
  "computer": "n",
  "concentrate on, focus on, think only about": "v",
  "connect": "v",
  "conquer": "v",
  "contain (have inside)": "v",
  "control": "v",
  "cook, prepare food, make a beverage": "v",
  "country, countryside": "n",
  "coward": "n",
  "cry": "v",
  "danger": "n",
  "data, information": "n",
  "daughter": "n",
  "day (from dawn to dawn)": "n",
  "debate": "v",
  "decide, decide upon": "v",
  "demand, require": "v",
  "deny": "v",
  "depart": "v",
  "depend on, rely on": "v",
  "describe": "v",
  "destroy": "v",
  "dictionary": "n",
  "die": "v",
  "dinner": "n",
  "disagree": "v",
  "disappear, vanish": "v",
  "discourage": "v",
  "discover, find, observe, notice": "v",
  "dislike": "v",
  "dock": "n",
  "dock": "v",
  "doctor, physician": "n",
  "done (uttered at the completion of a task)": "excl",
  "door, gate": "n",
  "doubt": "v",
  "dream": "v",
  "drink": "v",
  "drop": "v",
  "duty station, station": "n",
  "duty, quest, mission, task, chore": "n",
  "Earth": "n",
  "eat": "v",
  "enemy": "n",
  "enjoy": "v",
  "enter, go in": "v",
  "err, be mistaken, make a mistake": "v",
  "establish, set up": "v",
  "everyone, all, everything, each": "n",
  "expect": "v",
  "explain": "v",
  "face": "n",
  "fact": "n",
  "fall": "v",
  "family": "n",
  "father": "n",
  "feed (someone else), enrich spirit": "v",
  "female, woman": "n",
  "fight": "v",
  "fill": "v",
  "finger": "n",
  "fire": "n",
  "fire (torpedo, rocket, missile)": "v",
  "fix, repair": "v",
  "floor": "n",
  "follow (rules)": "v",
  "food, drink": "n",
  "fool": "n",
  "foot": "n",
  "forehead": "n",
  "forest, woods": "n",
  "forget": "v",
  "friend": "n",
  "garbage": "n",
  "gas": "n",
  "genius": "n",
  "gift": "n",
  "girl": "n",
  "give": "v",
  "glass (tumbler)": "n",
  "glow": "v",
  "go": "v",
  "goal, purpose": "n",
  "good (expressing satisfaction)": "excl",
  "grammar": "n",
  "grandfather": "n",
  "band, group, party": "n",
  "guard": "v",
  "gunner": "n",
  "hand": "n",
  "hate, detest": "v",
  "have a hangover, be hung over": "v",
  "have a headache": "v",
  "have, possess": "v",
  "he, she, him, her": "pro",
  "head": "n",
  "hear, listen to": "v",
  "helm": "n",
  "helmsman": "n",
  "help, aid": "v",
  "hide, cloak": "v",
  "history": "n",
  "home": "n",
  "honor": "n",
  "hope": "v",
  "hour": "n",
  "hunt": "v",
  "hurry": "v",
  "husband": "n",
  "I, me": "pro",
  "idea": "n",
  "identify": "v",
  "inhabitant": "n",
  "insult": "v",
  "intend, mean to": "v",
  "it": "pro",
  "jacket, coat": "n",
  "judge, estimate": "v",
  "keep something secret": "v",
  "keep, save": "v",
  "kill": "v",
  "Klingon (person)": "n",
  "Klingon (language)": "n",
  "knee": "n",
  "knife, dagger": "n",
  "know": "v",
  "label, ascertain, specify": "v",
  "lake": "n",
  "language": "n",
  "laugh": "v",
  "lead, guide": "v",
  "learn": "v",
  "leave, depart": "v",
  "leg": "n",
  "let's go, come on": "excl",
  "lie, fib": "v",
  "life": "n",
  "line, rope": "n",
  "listen": "v",
  "live": "v",
  "look for, seek, search for": "v",
  "love, one who is loved": "n",
  "make peace": "v",
  "male, man": "n",
  "manuscript": "n",
  "meet (for the first time)": "v",
  "meet, encounter, assemble, rendezvous": "v",
  "meeting": "n",
  "melt": "v",
  "mind, brain": "n",
  "minute (of time)": "n",
  "month (Klingon)": "n",
  "moon": "n",
  "morning": "n",
  "mother": "n",
  "mouth": "n",
  "name": "n",
  "navigate": "v",
  "night": "n",
  "no (answer to a question)": "excl",
  "no, I won't, I refuse, I disagree": "excl",
  "nonsense": "n",
  "nose": "n",
  "nostril": "n",
  "nothing, none, no one": "n",
  "noun": "n",
  "oath, promise": "n",
  "occur, happen": "v",
  "officer": "n",
  "opinion": "n",
  "opportunity, chance, opening": "n",
  "order, command": "v",
  "paper, sheet of paper": "n",
  "pay attention, concentrate": "v",
  "pay for": "v",
  "peace": "n",
  "period of time": "n",
  "person (humanoid)": "n",  # both {ghot} and {nuv}
  "pet": "n",
  "phenomenon, event, occurrence, effect": "n",
  "plan": "v",
  "planet": "n",
  "pleasure": "n",
  "practice, train, prepare": "v",
  "prefer": "v",
  "present": "v",
  "press down": "v",
  "prevent, block, prohibit": "v",
  "prisoner": "n",
  "prosper, be prosperous": "v",
  "protect": "v",
  "push": "v",
  "question, interrogate": "v",
  "rain": "v",
  "reach": "v",
  "read": "v",
  "Ready!": "excl",
  "realize": "v",
  "reason, motive, logical thinking, topic, subject, theme": "n",
  "receive": "v",
  "recognize": "v",
  "recommend, suggest": "v",
  "regret": "v",
  "remain": "v",
  "remember": "v",
  "remove, take off": "v",
  "resemble": "v",
  "respect": "v",
  "rest, relax": "v",
  "restaurant": "n",
  "return (to)": "v",
  "revenge": "n",
  "roam, travel, rove": "v",
  "room, enclosed area, chamber": "n",
  "run, jog": "v",
  "salute": "v",
  "scare": "v",
  "science": "n",
  "scientist": "n",
  "scream, cry out, shout, yell": "v",
  "secret": "n",
  "see": "v",
  "sell": "v",
  "send": "v",
  "sentence": "n",
  "sergeant": "n",
  "serve (a master)": "v",
  "shield": "n",
  "ship, vessel": "n",
  "shoe": "n",
  "shoot": "v",
  "shot": "n",
  "show, reveal": "v",
  "sir": "n",
  "sister": "n",
  "sit": "v",
  "skin": "n",
  "sky": "n",
  "sleep": "v",
  "slit": "v",
  "so, well": "excl",
  "be soft": "v",
  "somebody, something, anybody, anything": "n",
  "somewhere": "n",
  "son": "n",
  "source": "n",
  "speak, say": "v",
  "stand": "v",
  "stop, cease": "v",
  "story": "n",
  "study": "v",
  "stuff": "v",
  "success": "n",
  "surprise": "v",
  "surrender, give up": "v",
  "sword": "n",
  "system": "n",
  "take": "v",
  "take away": "v",
  "tell the truth": "v",
  "tell, report": "v",
  "theory": "n",
  "there, over there, thereabouts": "n",
  "they, them (incapable of language)": "pro",
  "they, them (capable of using language)": "pro",
  "thing": "n",
  "think": "v",
  "throw away": "v",
  "today": "n",
  "tomorrow": "n",
  "translate": "v",
  "tree": "n",
  "tribble": "n",
  "trouble": "n",
  "trust, have faith in": "v",
  "turn": "v",
  "understand": "v",
  "use": "v",
  "verb": "n",
  "verify, check if (something) is true, make sure that (something) is true": "v",
  "victory, triumph": "n",
  "violate": "v",
  "violation": "n",
  "visit": "v",
  "vocabulary": "n",
  "voice": "n",
  "vow, swear": "v",
  "Vulcan (person)": "n",
  "Vulcan (planet)": "n",
  "wait (for)": "v",
  "wake up, cease sleeping": "v",
  "walk": "v",
  "want": "v",
  "war (an individual war)": "n",
  "warrior": "n",
  "watch": "v",
  "water": "n",
  "we, us": "pro",
  "weapon": "n",
  "wear (clothes)": "v",
  "week (Klingon)": "n",
  "well done, very good": "excl",
  "wife": "n",
  "wind, breeze": "n",
  "wing": "n",
  "wonder": "v",
  "word": "n",
  "work, function, succeed, win": "v",
  "work, toil": "v",
  "wound": "v",
  "engrave, incise, mark (upon), write": "v",
  "year (Klingon)": "n",
  "yes, true (answer to yes/no question)": "excl",  # both {HIja'} and {HISlaH}
  "yesterday": "n",
  "you": "pro",
  "you (plural)": "pro",
}

# TODO: Re-use this from call_google_translate.py and renumber.py.
# Ignore mem-00-header.xml and mem-29-footer.xml because they don't contain entries.
filenames = ['mem-01-b.xml', 'mem-02-ch.xml', 'mem-03-D.xml', 'mem-04-gh.xml', 'mem-05-H.xml', 'mem-06-j.xml', 'mem-07-l.xml', 'mem-08-m.xml', 'mem-09-n.xml', 'mem-10-ng.xml', 'mem-11-p.xml', 'mem-12-q.xml', 'mem-13-Q.xml', 'mem-14-r.xml', 'mem-15-S.xml', 'mem-16-t.xml', 'mem-17-tlh.xml', 'mem-18-v.xml', 'mem-19-w.xml', 'mem-20-y.xml', 'mem-21-a.xml', 'mem-22-e.xml', 'mem-23-I.xml', 'mem-24-o.xml', 'mem-25-u.xml', 'mem-26-suffixes.xml', 'mem-27-extra.xml', 'mem-28-examples.xml']

for filename in filenames:
  with fileinput.FileInput(filename, inplace=True) as file:
    for line in file:
      next_line = None
      pos_match = re.search(r"part_of_speech\">(.*)<", line)
      if (pos_match):
        # The line following part of speech is the English definition.
        next_line = next(file)
        definition_match = re.search(r"definition\">(.*)<", next_line)

        if (definition_match):
          definition = definition_match.group(1)
          pos_parts = pos_match.group(1).split(':')
          pos = pos_parts[0]
          attrs = []
          if len(pos_parts) > 1:
            attrs = pos_parts[1].split(',')

          if (definition_to_pos.get(definition) == pos or
              (definition_to_pos.get(definition) == "pro" and pos == "n" and "pro" in attrs)):
            line = re.sub(r">(.*)<", r">{}:{}<".format(pos,','.join(attrs + ['klcp1'])), line)
            del definition_to_pos[definition]

      print(line, end='')
      if next_line:
        print(next_line, end='')

# Print entries which were not matched.
print(definition_to_pos)
